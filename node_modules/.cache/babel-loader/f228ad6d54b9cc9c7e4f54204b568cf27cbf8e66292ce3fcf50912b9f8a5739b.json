{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\IdeaProjects\\\\portfolio\\\\src\\\\components\\\\sections\\\\Header\\\\header.jsx\";\nimport './header.css';\nimport gsap from 'gsap';\nimport SplitTextJS from 'split-text-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Explode = name => {\n  const text = name.split(\"\");\n  const spans = text.map((letter, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"letter\",\n    children: letter\n  }, `letter-${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"header__name\",\n    children: spans\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Explode;\nconst Header = () => {\n  const titles = gsap.utils.toArray('.header__title');\n  const timeline = gsap.timeline();\n  titles.forEach(title => {\n    const splitTitle = new SplitTextJS(title);\n    timeline.from(splitTitle.chars, {\n      opacity: 0,\n      y: 30,\n      rotateX: -90\n      // stagger: .02,\n    }, \"<\").to(splitTitle.chars, {\n      opacity: 0,\n      y: -10,\n      rotateX: 90\n      // stagger: .02,\n    }, \"<1\");\n  });\n  timeline.repeat(-1);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    id: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container header__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Hello, I am \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), Explode(\"Nicholas\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__titles\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__title\",\n          children: \"Software Engineer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__title\",\n          children: \"Java Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__title\",\n          children: \"Videographer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__title\",\n          children: \"Creative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__title\",\n          children: \"Team Leader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__title\",\n          children: \"Problem Solver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Header;\nexport default Header;\nvar _c, _c2;\n$RefreshReg$(_c, \"Explode\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["gsap","SplitTextJS","jsxDEV","_jsxDEV","Explode","name","text","split","spans","map","letter","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Header","titles","utils","toArray","timeline","forEach","title","splitTitle","from","chars","opacity","y","rotateX","to","repeat","id","_c2","$RefreshReg$"],"sources":["C:/Users/nicho/IdeaProjects/portfolio/src/components/sections/Header/header.jsx"],"sourcesContent":["import './header.css';\r\nimport gsap from 'gsap';\r\nimport SplitTextJS from 'split-text-js';\r\n\r\nconst Explode = name => {\r\n\tconst text = name.split(\"\");\r\n\tconst spans = text.map((letter, index) => (\r\n\t\t<span key={`letter-${index}`} className=\"letter\">\r\n\t\t  {letter}\r\n\t\t</span>\r\n\t));\r\n\treturn <h1 className='header__name'>{spans}</h1>\r\n};\r\n\r\nconst Header = () => {\r\n\tconst titles = gsap.utils.toArray('.header__title');\r\n\tconst timeline = gsap.timeline();\r\n\t\r\n\ttitles.forEach(title => {\r\n\t\tconst splitTitle = new SplitTextJS(title);\r\n\t\ttimeline.from(splitTitle.chars, {\r\n\t\t\topacity: 0,\r\n\t\t\ty: 30,\r\n\t\t\trotateX: -90,\r\n\t\t\t// stagger: .02,\r\n\t\t}, \"<\")\r\n\t\t.to(splitTitle.chars, {\r\n\t\t\topacity: 0,\r\n\t\t\ty: -10,\r\n\t\t\trotateX: 90,\r\n\t\t\t// stagger: .02,\r\n\t\t}, \"<1\")\r\n\t})\r\n\ttimeline.repeat(-1);\r\n\t\r\n\treturn (\r\n\t\t<header id='header'>\r\n\t\t\t<div className=\"container header__container\">\r\n\t\t\t\t<h2> Hello, I am </h2>\r\n\t\t\t\t{Explode(\"Nicholas\")}\r\n\t\t\t\t<div className='header__titles'>\r\n\t\t\t\t\t<p className=\"header__title\">Software Engineer</p>\r\n\t\t\t\t\t<p className=\"header__title\">Java Developer</p>\r\n\t\t\t\t\t<p className=\"header__title\">Videographer</p>\r\n\t\t\t\t\t<p className=\"header__title\">Creative</p>\r\n\t\t\t\t\t<p className=\"header__title\">Team Leader</p>\r\n\t\t\t\t\t<p className=\"header__title\">Problem Solver</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}